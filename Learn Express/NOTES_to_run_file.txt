

1) first create folder whatever name need to give.

2) in command line--->  npm init -y

3) then --> npm install express

4) then --> npm install nodemon

ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰  "To Run file"   ğŸ‘‰ğŸ‘‰ Because we make some changes in "package.json" file. manually

use ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ npm run get_post_req_res --> for ğŸ‘‰ğŸ‘‰ get_post_req_res.js file  in terminal to run server through "nodemon" module
use ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ğŸ‘‰ npm run middleware --> for ğŸ‘‰ğŸ‘‰ middleware.js file  in terminal to run server through "nodemon" module

so on for remaining files............
ğŸ‘‡
find the proper name given as key in ğŸ‘‰ "scripts" obj in ğŸ‘‰ğŸ‘‰ "package.json" file

---------------------------------------------------------------------------------------------------------

ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ğŸ‘‡ This are 3 ways to send data to ur backend 

so in every handlePostRequest(req, res) or handlePostRequest(req, res)  funct 
  there is   var val = req.parameter.value;   ğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆ headers.value or anything using (.) ğŸ‘‰ğŸ‘‰ means we pass value in ğŸ‘‰ "Params" section in "Postmane"
  there is   var val = req.headers.value;   ğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆ headers.value or anything using (.) ğŸ‘‰ğŸ‘‰ means we pass value in ğŸ‘‰ "Headers" section in "Postmane"

ğŸ‘‰ğŸ‘‰ But in case of ğŸ‘‰ "Body" we can't directly access to "req.body.value" for that we need first ğŸ‘‰ install package ğŸ‘‰ npm install body-parser and then getting it by ğŸ‘‰ğŸ‘‰ --> var bodyParser = require('body-parser') and then use it by ğŸ‘‰ğŸ‘‰ --> app.use(bodyParser.json())
 ğŸ‘‰ then we can use ğŸ‘‰ğŸ‘‰  var val = req.body.value;   ğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆğŸ‘ˆ headers.value or anything using (.) ğŸ‘‰ğŸ‘‰ means we pass value in ğŸ‘‰ "Body" section in "Postmane"

---------------------------------------------------------------------------------------------------------

Responses are grouped in five classes: // https://developer.mozilla.org/en-US/docs/Web/HTTP/Status

Informational responses (100 â€“ 199)
Successful responses    (200 â€“ 299)
Redirection messages    (300 â€“ 399)
Client error responses  (400 â€“ 499)
Server error responses  (500 â€“ 599)










